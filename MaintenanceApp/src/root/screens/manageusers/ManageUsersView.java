package root.screens.manageusers;

import java.awt.EventQueue;
import java.awt.event.ActionListener;
import javax.swing.table.DefaultTableModel;
import root.Navigable;
import root.Screen;


public class ManageUsersView extends Screen {
    private final ManageUsersModel model;
    private final ButtonColumn deleteCol, editCol;

    /**
     * Creates new form ManageUsersView. If the model is null, then the view
     * open an error dialog, then it will automatically go back to the previous
     * screen.
     * @param nav navigator used to switch between screens
     * @param model used to show the users
     */
    public ManageUsersView(Navigable nav, ManageUsersModel model) {
        super(nav);
        this.model = model;
        initComponents();
        
        if (model != null) {
            usersTable.getColumn("Fiscal Code").setMinWidth(135);
            deleteCol = new ButtonColumn(usersTable.getColumn("delete"), true, 75);
            editCol = new ButtonColumn(usersTable.getColumn("edit"), true, 60);
        } else {
            deleteCol = editCol = null;
            EventQueue.invokeLater(() -> {
                super.showErrorMsg("Unable to fetch users", "Re-try later!");
                nav.pop();
            });
        }
    }
    
    /**
     * Create an empty TableModel to use when model is not valid
     * @return an empty DefaultTableModel
     */
    private DefaultTableModel createDummyTableModel() {
        return new DefaultTableModel(new Object[0][0], ManageUsersModel.columnNames);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        backBtn = new javax.swing.JButton();
        javax.swing.JLabel jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        usersTable = new javax.swing.JTable();
        createBtn = new javax.swing.JButton();

        backBtn.setText("back");

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setText("MANAGE USERS");

        usersTable.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        usersTable.setModel(model != null ? model.getTableModel() : createDummyTableModel());
        usersTable.setRowHeight(20);
        usersTable.setRowSelectionAllowed(false);
        jScrollPane1.setViewportView(usersTable);

        createBtn.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        createBtn.setText("create user");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(createBtn)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(backBtn)
                        .addGap(160, 160, 160)
                        .addComponent(jLabel1))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 712, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(20, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1)
                    .addComponent(backBtn))
                .addGap(51, 51, 51)
                .addComponent(createBtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 442, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(72, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents
    
    public void addBackActionListener(ActionListener al) {
        backBtn.addActionListener(al);
    }
    
    public void addCreateActionListener(ActionListener al) {
        createBtn.addActionListener(al);
    }
    
    public void setDeleteUserActionListener(ButtonColumnActionListener al) {
        deleteCol.setActionListener(al);
    }
    
    public void setEditUserActionListener(ButtonColumnActionListener al) {
        editCol.setActionListener(al);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backBtn;
    private javax.swing.JButton createBtn;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable usersTable;
    // End of variables declaration//GEN-END:variables
}
